#!/usr/bin/env python
#
# Example: lsd-import-smf -c ps1_det ps1_exp ./test.smf
#

import sys
import getopt
import skysurvey.smf as smf
import skysurvey as lsd
from   skysurvey.utils import *

def usage():
	print "Usage: %s [-c|--create] <det_cat_dir> <exp_cat_dir> <smf_file(s)>" % sys.argv[0]

try:
	optlist, args = getopt.getopt(sys.argv[1:], 'c', ['create'])
except getopt.GetoptError, err:
	print str(err)
	usage()
	exit(-1)

if len(args) < 3:
	print "Error: Not enough command line arguments."
	usage()
	exit(-1)

(det_catdir, exp_catdir, files) = args[0], args[1], args[2:]

create = False
for (o, a) in optlist:
	if o == '-c' or o == '--create':
		create = True

#
# Actual work
#

# SMF file import
print >> sys.stderr, "Importing SMF files:"
smf.import_from_smf(det_catdir, exp_catdir, files, create)
print >> sys.stderr, "done."

# Build neighbor caches for images tables
print >> sys.stderr, "Building neighbor cache (exposures): ",
smf.make_image_cache(det_catdir, exp_catdir)

# Sanity check: all queries linking to images must resolve within cell
print >> sys.stderr, "Consistency check: ",
det_cat = lsd.Catalog(det_catdir)
for row in det_cat.iterate('det_id, ra, dec, exp_id, equinox JOIN ps1_exp(outer) WHERE equinox == 0'):
	raise Exception("Inconsistency detected: (det_id, ra, dec, exp_id, equinox) = " + str(row))

# Build neighbor caches for detections
print >> sys.stderr, "Building neighbor cache (detections): ",
det_cat.build_neighbor_cache()

# Compute summary stats for both catalogs
print >> sys.stderr, "Computing summary statistics (detections): ",
det_cat.compute_summary_stats()
exp_cat = lsd.Catalog(exp_catdir)
print >> sys.stderr, "Computing summary statistics (exposures): ",
exp_cat.compute_summary_stats()

# Done
print "Import done.", det_cat.nrows(), "detections in", exp_cat.nrows() , "exposures."
