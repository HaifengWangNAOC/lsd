#!/usr/bin/env python
import sys
import os
import os.path
import numpy as np
import getopt
import lsd
from lsd.bounds import rectangle, make_canonical
from lsd.utils import make_printf_string, as_tuple
import pyfits
from lsd.tui import *

def usage():
	print "Usage: %s --db=dbdir --bounds=[All] --resolution=[2arcmin] --query=['_LON, _LAT FROM <table>'] <table> <output.fits>" % sys.argv[0]

if __name__ == "__main__":
	optlist, (dbdir,), (table, output) = tui_getopt('b:r:q:', ['bounds=', 'resolution=', 'query='], 2, usage)

	bounds = []
	query = '_LON, _LAT FROM "%s"' % table
	dx = 2.
	for o, a in optlist:
		if o in ('-b', '--bounds'):
			bounds.extend(eval('[' + a + ']'))
		if o in ('-r', '--resolution'):
			dx = float(a)
		if o in ('-q', '--query'):
			query = a

	bounds = make_canonical(bounds)

	#
	# Compute and store the sky coverage at a given resolution (see lsd/tasks.py on how this is implemented)
	#
	db = lsd.DB(dbdir)
	sky = lsd.compute_coverage(db, query=query, dx=dx/60., bounds=bounds)
	pyfits.writeto(output, sky[::-1,::-1].transpose(), clobber=True)
