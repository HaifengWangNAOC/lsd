#!/usr/bin/env python
#
# Example: lsd-import-smf -c ps1_det ps1_exp ./test.smf
#

import sys
import getopt
from lsd.tui import *
import lsd.smf as smf
from lsd.utils import *
from lsd import DB

def usage():
	print "Usage: %s [-c|--create] [-f|--file-list] [-m|--mode] [-o|--offset] [-s|--stride] <survey_id> <det_table> <exp_table> <smf_file(s)>" % sys.argv[0]

optlist, (dbdir,), args = tui_getopt('cfm:s:o:', ['create', 'file-list', 'mode=', 'stride=', 'offset='], 4, usage, argn_max=-1)
(survey, det_tabname, exp_tabname, files) = args[0], args[1], args[2], args[3:]

create = False
filelist = False
mode = None
stride = 1
offset = 0
for (o, a) in optlist:
	if o == '-c' or o == '--create':
		create = True
	if o == '-f' or o == '--file-list':
		filelist = True
	if o == '-m' or o == '--mode':
		mode = str(a)
	if o == '-s' or o == '--stride':
		stride = int(a)
	if o == '-o' or o == '--offset':
		offset = int(a)

if filelist:
	files = open(files[0]).read().splitlines()

files = files[offset::stride]

#
# Actual work
#

db = DB(dbdir)
db.begin_transaction(join=True)

# SMF file import
if not mode or mode == 'import':
	print >> sys.stderr, "Importing SMF files:"
	smf.import_from_smf(db, det_tabname, exp_tabname, files, survey, create=create)
	print >> sys.stderr, "done."

if not mode or mode == 'postprocess':
	# Commit the result
	db.commit()

	# Sanity check: all queries linking to images must resolve within cell
	print >> sys.stderr, "Consistency check: ",
	q = db.query('_CELLID, det_id, ra, dec, exp_id, equinox FROM "%s", "%s"(outer) WHERE equinox == 0' % (det_tabname, exp_tabname))
	for row in q.iterate():
		raise Exception("Inconsistency detected: (cell_id, det_id, ra, dec, exp_id, equinox) = " + str(row))

	# Done
	det_table = db.table(det_tabname)
	exp_table = db.table(exp_tabname)
	print "Import done.", det_table.nrows(), "detections in", exp_table.nrows() , "exposures."
